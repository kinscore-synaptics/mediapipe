// Copyright 2019 The MediaPipe Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto2";

package mediapipe;

import "mediapipe/framework/calculator.proto";

// Full Example:
//
// node {
//   calculator: "SynapInferenceCalculator"
//   input_stream: "TENSOR_IN:image_tensors"
//   output_stream: "TENSOR_OUT:result_tensors"
//   options {
//     [mediapipe.SynapInferenceCalculatorOptions.ext] {
//       model_path: "model.nbg"
//       metadata_path: "model.json"
//       delegate { gpu {} }
//     }
//   }
// }
//
message SynapInferenceCalculatorOptions {
  extend mediapipe.CalculatorOptions {
    optional SynapInferenceCalculatorOptions ext = 233867214;
  }

  // Path to the NBG model (ex: /path/to/modelname.nbg).
  // On mobile, this is generally just modelname.nbg.
  required string model_path = 1;

  // Path to the metadata JSON (ex: /path/to/modelname.json).
  // On mobile, this is generally just modelname.json.
  required string metadata_path = 2;

  // Whether to use CMA or standard allocator
  optional bool use_cma = 3;
}
